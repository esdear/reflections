What happens when you initialize a repository? Why do you need to do it?

	you create a .git file that will track all of your changes and commits.
you must do this in order to do versioning with git, it will not happen 
automatically.  It does not, however, create your first commit.


How is the staging area different from the working directory and the repository?
What value do you think it offers?

	it is where you combine and decide what files will be included in a 
commit before you actually create it.  allows you complete control over what
is included and what is not before adding your specific commit to the repository


How can you use the staging area to make sure you have one commit per logical
change?

	by comparing what is in the staging area with what is in your working
directory and what is in your repository already.  then commit after each 
logical change.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	branches are good for trying new features, adding new versions, experiments,
or anything else where changes may not want to be kept in the long run or you
need a working version while developing a new component


How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?